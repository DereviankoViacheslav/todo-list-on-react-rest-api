{"version":3,"sources":["components/Task/Task.jsx","components/Task/index.jsx","components/TasksList/TasksList.jsx","components/TasksList/index.jsx","components/CreateTaskInput/index.jsx","components/CreateTaskInput/CreateTaskInput.jsx","services/mockApiService.js","components/TodoList/index.jsx","components/TodoList/TodoList.jsx","components/App/App.jsx","components/App/index.jsx","index.js"],"names":["Task","id","done","text","onDelete","onToggleDone","classes","className","type","checked","onChange","onClick","TasksList","tasks","tasksList","sort","a","b","map","task","key","CreateTaskInput","state","taskText","handleChange","event","setState","target","value","handleCreateTask","props","onCreate","this","React","Component","restApi","method","async","url","configObjectMethod","headers","body","JSON","stringify","fetch","res","ok","json","Error","status","getResource","addTask","deleteTask","setTaskStatus","find","TodoList","fetchTasksList","then","taskId","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a647599.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Task.scss';\n\nfunction Task({ id, done, text, onDelete, onToggleDone }) {\n  const classes = `list-item${done ? ' list-item_done' : ''}`;\n\n  return (\n    <li className={classes}>\n      <input\n        type=\"checkbox\"\n        className=\"list-item__checkbox\"\n        checked={done}\n        onChange={() => onToggleDone(id)}\n      />\n      <span className=\"list-item__text\" >{text}</span>\n      <button className=\"list-item__delete-btn\" onClick={() => onDelete(id)}></button>\n    </li>\n  );\n}\n\nTask.propTypes = {\n  id: PropTypes.string.isRequired,\n  done: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onToggleDone: PropTypes.func.isRequired,\n}\n\nexport default Task;","import Task from './Task';\n\nexport default Task;","import React from 'react';\nimport Task from '../Task';\nimport PropTypes from 'prop-types';\nimport './TasksList.scss';\n\nfunction TasksList({ tasks, onDelete, onToggleDone }) {\n  const tasksList = [...tasks]\n    .sort((a, b) => a.done - b.done)\n    .map((task) => {\n      return (\n        <Task key={task.id} {...task} onDelete={onDelete} onToggleDone={onToggleDone} />\n      );\n    });\n\n  return (\n    <ul className=\"list\">\n      {tasksList}\n    </ul>\n  );\n}\n\nTasksList.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onToggleDone: PropTypes.func.isRequired,\n}\n\nexport default TasksList;","import TasksList from './TasksList';\n\nexport default TasksList;","import CreateTaskInput from './CreateTaskInput';\n\nexport default CreateTaskInput;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CreateTaskInput.scss';\n\nclass CreateTaskInput extends React.Component {\n  state = {\n    taskText: '',\n  }\n\n  handleChange = (event) => {\n    this.setState({ taskText: event.target.value })\n  }\n\n  handleCreateTask = () => {\n    this.props.onCreate(this.state.taskText);\n    this.setState({ taskText: '' })\n  }\n\n  render() {\n    return (\n      <div className=\"create-task\">\n        <input\n          className=\"create-task__input\"\n          value={this.state.taskText}\n          onChange={this.handleChange}\n          type=\"text\"\n        />\n        <button\n          onClick={this.handleCreateTask}\n          className=\"btn create-task__btn\"\n        >\n          Create\n        </button>\n      </div>\n    );\n  }\n}\n\nCreateTaskInput.propTypes = {\n  onCreate: PropTypes.func.isRequired,\n}\n\nexport default CreateTaskInput;","const baseUrl = 'https://5e300c25576f9d0014d63ac2.mockapi.io/api/v1/tasks';\n\nconst restApi = async (method, task, id) => {\n  let url = baseUrl;\n  let configObjectMethod = {};\n\n  switch (method) {\n    case 'DELETE':\n      configObjectMethod = { method: 'DELETE' };\n      url += `/${id}`;\n      break;\n    case 'POST':\n      configObjectMethod = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json;charset=utf-8', },\n        body: JSON.stringify(task),\n      };\n      break;\n    case 'PUT':\n      configObjectMethod = {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json;charset=utf-8', },\n        body: JSON.stringify(task),\n      };\n      url += `/${id}`;\n      break;\n    default:\n      configObjectMethod = null;\n      break;\n  }\n\n  const res = await fetch(url, configObjectMethod);\n  if (res.ok) return await res.json();\n  throw new Error(`Could not fetch, received ${res.status}`);\n};\n\nconst getResource = async () => {\n  return await restApi();\n};\n\nconst addTask = async (text) => {\n  const task = { text, done: false };\n  return await restApi('POST', task);\n};\n\nconst deleteTask = async (id) => {\n  return await restApi('DELETE', null, id);\n};\n\nconst setTaskStatus = async (id) => {\n  const tasks = await getResource();\n  const { text, done } = tasks.find((task) => task.id === id);\n  const task = { text, done: !done };\n  return await restApi('PUT', task, id);\n}\n\nexport { addTask, deleteTask, setTaskStatus, getResource };","import TodoList from './TodoList';\n\nexport default TodoList;","import React from 'react';\nimport TasksList from '../TasksList';\nimport CreateTaskInput from '../CreateTaskInput';\nimport { addTask, deleteTask, setTaskStatus, getResource } from '../../services/mockApiService';\nimport './TodoList.scss';\n\nclass App extends React.Component {\n  state = { tasks: [] };\n\n  componentDidMount() {\n    this.fetchTasksList();\n  }\n\n  fetchTasksList = () => {\n    getResource()\n      .then(tasks => {\n        this.setState({ tasks });\n      });\n  }\n\n  onCreate = (text) => {\n    addTask(text)\n      .then(() => this.fetchTasksList());\n  }\n\n  onDelete = (taskId) => {\n    deleteTask(taskId)\n      .then(() => this.fetchTasksList());\n  }\n\n  onToggleDone = (taskId) => {\n    setTaskStatus(taskId)\n      .then(() => this.fetchTasksList());\n  }\n\n  render() {\n    return (\n      <>\n        <h1 className=\"title\">Todo List</h1>\n        <main className=\"todo-list\">\n          <CreateTaskInput onCreate={this.onCreate} />\n          <TasksList\n            tasks={this.state.tasks}\n            onDelete={this.onDelete}\n            onToggleDone={this.onToggleDone}\n          />\n        </main>\n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport TodoList from '../TodoList';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <TodoList />\n  );\n}\n\nexport default App;","import App from './App';\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}